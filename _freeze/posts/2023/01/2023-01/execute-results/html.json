{
  "hash": "3820a6041446a468032c936ccaaabefd",
  "result": {
    "markdown": "---\ntitle: \"2023 Day 01\"\nsubtitle: \"Trebuchet?!\"\ndate: 2023-12-01\ncategories: [python]\ndraft: false\n# This doesn't work when I put it in _metadata.yml\nknitr:\n  opts_chunk: \n    comment: \"#>\"\n---\n\n::: {.cell}\n\n```{.python .cell-code}\nwith open('input.txt', \"r\") as f:\n    lines = f.readlines()\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndef first_value(line, m):\n  for i, _ in enumerate(line):\n    for text, val in m.items():\n      if line[i:].startswith(text):\n        return val\n\n\nm = {c: int(c) for c in '123456789'}\n\nanswer1 = sum(10 * first_value(line, m) + first_value(line[::-1], m) for line in lines)\nprint(answer1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> 55712\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell}\n\n```{.python .cell-code}\nwords = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\nm.update({text: i for i, text in enumerate(words, 1)})\nrev_m = {text[::-1]: value for text, value in m.items()}\n\nanswer2 = sum(10 * first_value(line, m) + first_value(line[::-1], rev_m) for line in lines)\nprint(answer2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> 55413\n```\n:::\n:::\n\n```{=html}\n<!-- Button trigger modal -->\n<div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n<button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n  <i class=\"bi\"></i> Full Solution\n</button>\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-xl\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{< meta title >}} Full Solution</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n```\n\n::: {.cell file='solution.py'}\n\n```{.r .cell-code}\nwith open('input.txt', \"r\") as f:\n    lines = f.readlines()\n\n\ndef first_value(line, m):\n  for i, _ in enumerate(line):\n    for text, val in m.items():\n      if line[i:].startswith(text):\n        return val\n\n\nm = {c: int(c) for c in '123456789'}\n\nanswer1 = sum(10 * first_value(line, m) + first_value(line[::-1], m) for line in lines)\nprint(answer1)\n\n\n# Part 2\nwords = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\nm.update({text: i for i, text in enumerate(words, 1)})\nrev_m = {text[::-1]: value for text, value in m.items()}\n\nanswer2 = sum(10 * first_value(line, m) + first_value(line[::-1], rev_m) for line in lines)\nprint(answer2)\n```\n:::\n\n```{=html}\n      </div>\n      <div class=\"modal-footer\">\n        <small><i>Execution took 1.1 seconds</i></small>\n      </div>\n    </div>\n  </div>\n</div>\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}